% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_skeleton.R
\name{plot_skeleton}
\alias{plot_skeleton}
\title{Plots a simplicial complex.}
\usage{
plot_skeleton(
  g2,
  k,
  r,
  g,
  b,
  pushforward = mean,
  seed = 10,
  iterations = 1500,
  file = ""
)
}
\arguments{
\item{g2}{an object of the class \code{simplicial} containing the nerve complex.}

\item{k}{a numeric vector or matrix specifying one or more functions with
support on the set of points that will be mapped to the rainbow palette. Each column
corresponds to a point and each row specifies a different function. If more than one
function is specified, the average of all rows is considered. Incompatible with
the parameters \code{r}, \code{g}, and \code{b}.}

\item{r}{similar to \code{k} but mapped to the red channel.}

\item{g}{similar to \code{k} but mapped to the green channel.}

\item{b}{similar to \code{k} but mapped to the blue channel.}

\item{pushforward}{pushforward function that maps \code{r}, \code{g}, \code{b},
and \code{k} to functions with support on the simplices. By default is set to
\code{mean}. Other choices may slow down the computation substantially.}

\item{seed}{integer specifying the seed used to initialize the force-directed layout. By
default is set to 10.}

\item{iterations}{number of iterations used in the Force Atlas 2 layout. By default is set
to 1500. A larger value may be required for optimal visualization of large graphs.}

\item{file}{if specified, exports the 1-skeleton to graphviz DOT \code{file}}
}
\description{
Plots the 0-, 1- and 2-simplices of a simplicial complex and colors the vertices according
to the value of one or more functions with support on the underlying set of points. The complex
is visualized using a force-directed graph layout acting on the 1-skeleton. Node sizes are
proportional to the number of points in the corresponding open set.
}
\examples{
# Example 1
library(RayleighSelection)
gy <- nerve_complex(list(c(1,4,6,10), c(1,2,7), c(2,3,8), c(3,4,9,10), c(4,5)))
plot_skeleton(gy,k=c(0,1,1,0,0,0,0,0,0,1))


# Example 2: MNIST dataset
data("mnist")

# Compute reduced representation using Laplacian eigenmap of pixels with high variance
library(dimRed)
leim <- LaplacianEigenmaps()
mnist_top <- mnist[apply(mnist, 1, var) > 10000,]
emb <- leim@fun(as(t(mnist_top), "dimRedData"), leim@stdpars)

# Compute Mapper representation using the Laplacian eigenmap as an auxiliary function and correlation
# distance as metric
library(TDAmapper)
mnist_distances <- (1.0 - cor(mnist_top))
m2 <- mapper2D(distance_matrix = mnist_distances,
               filter_values = list(emb@data@data[,1], emb@data@data[,2]),
               num_intervals = c(30,30),
               percent_overlap = 35,
               num_bins_when_clustering = 10);

# Compute the nerve complex
gg <- nerve_complex(m2$points_in_vertex)

# Plots simplicial complex colored by the value of the 301th pixel
plot_skeleton(gg, k=mnist[301,])

}
