// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// adjacencyCpp
List adjacencyCpp(List x, IntegerVector& feature_order);
RcppExport SEXP _RayleighSelection_adjacencyCpp(SEXP xSEXP, SEXP feature_orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type feature_order(feature_orderSEXP);
    rcpp_result_gen = Rcpp::wrap(adjacencyCpp(x, feature_order));
    return rcpp_result_gen;
END_RCPP
}
// l1down
arma::mat l1down(arma::mat one_simplices, arma::vec zero_weights, arma::vec one_weights);
RcppExport SEXP _RayleighSelection_l1down(SEXP one_simplicesSEXP, SEXP zero_weightsSEXP, SEXP one_weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type one_simplices(one_simplicesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zero_weights(zero_weightsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type one_weights(one_weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(l1down(one_simplices, zero_weights, one_weights));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_mod_laplacian();
RcppExport SEXP _rcpp_module_boot_mod_scorer_ensemble();

static const R_CallMethodDef CallEntries[] = {
    {"_RayleighSelection_adjacencyCpp", (DL_FUNC) &_RayleighSelection_adjacencyCpp, 2},
    {"_RayleighSelection_l1down", (DL_FUNC) &_RayleighSelection_l1down, 3},
    {"_rcpp_module_boot_mod_laplacian", (DL_FUNC) &_rcpp_module_boot_mod_laplacian, 0},
    {"_rcpp_module_boot_mod_scorer_ensemble", (DL_FUNC) &_rcpp_module_boot_mod_scorer_ensemble, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_RayleighSelection(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
